{"version":3,"sources":["recipe.js","App.js","reportWebVitals.js","index.js"],"names":["Recipe","title","calories","image","cuisineType","ingredients","className","src","alt","map","ingredient","text","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","get_recipes","a","fetch","response","json","data","hits","type","value","onChange","e","target","onClick","preventDefault","recipe","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPA4BeA,EA1BA,SAAC,GAAoD,IAAnDC,EAAkD,EAAlDA,MAAMC,EAA4C,EAA5CA,SAASC,EAAmC,EAAnCA,MAAMC,EAA6B,EAA7BA,YAAYC,EAAiB,EAAjBA,YAC9C,OAEI,qBAAKC,UAAU,iBAAf,SACI,sBAAKA,UAAU,OAAf,UACI,yBAAQA,UAAU,QAAlB,UACA,6BAAKL,IACL,qBAAKM,IAAKJ,EAAOK,IAAI,YAAYF,UAAU,QAAQ,uBACnD,2CAAcF,KAAiB,uBAC/B,8BAAG,0CAAH,IAAqBF,KAAa,0BAGlC,yBAAQI,UAAU,OAAlB,UACI,6CACJ,6BACKD,EAAYI,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,qB,MC8CzBC,MA5Df,WAEE,IAGA,EAA+BC,mBAAS,IAAxC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA2BJ,mBAAS,WAApC,mBAAOK,EAAP,KAAeC,EAAf,KAGAC,qBAAU,WACRC,MAEA,CAACH,IAIH,IAAMG,EAAW,uCAAG,8BAAAC,EAAA,sEACKC,MAAM,mCAAD,OAAoCL,EAApC,mBAhBhB,WAgBgB,oBAfhB,qCAcM,cACZM,EADY,gBAECA,EAASC,OAFV,OAEZC,EAFY,OAGlBX,EAAWW,EAAKC,MAHE,2CAAH,qDAoBjB,OACE,sBAAKrB,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,4BACA,uBAAMA,UAAU,cAAhB,UACE,uBAAOsB,KAAK,OAAOtB,UAAU,aAAauB,MAAOb,EAAQc,SAf1C,SAAAC,GACnBd,EAAUc,EAAEC,OAAOH,UAef,wBAAQD,KAAK,SAAStB,UAAU,cAAc2B,QAZlC,SAAAF,GAChBA,EAAEG,iBACFf,EAASH,GACTC,EAAU,KASN,uBAEF,sBAAKX,UAAU,UAAf,UACCQ,EAAQL,KAAI,SAAA0B,GAAM,OACjB,cAAC,EAAD,CAEAlC,MAAOkC,EAAOA,OAAOC,MACrBlC,SAAUiC,EAAOA,OAAOjC,SACxBC,MAAOgC,EAAOA,OAAOhC,MACrBC,YAAa+B,EAAOA,OAAO/B,YAC3BC,YAAa8B,EAAOA,OAAO9B,aALtB8B,EAAOA,OAAOC,UAHrB,WCpCSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bc3e06f5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Recipe = ({title,calories,image,cuisineType,ingredients}) => {\r\n    return (\r\n\r\n        <div className='card-container'>\r\n            <div className='card'>\r\n                <figure className='front'>\r\n                <h1>{title}</h1>            \r\n                <img src={image} alt=\"loading..\" className='img' /><br></br>\r\n                <h5>Cuisine: {cuisineType}</h5><br></br>\r\n                <p><b>Calories:</b> {calories}</p><br></br>\r\n                </figure>\r\n\r\n                <figure className='back'>\r\n                    <h3>Ingredients</h3>\r\n                <ol>\r\n                    {ingredients.map(ingredient =>(\r\n                        <li>{ingredient.text}</li>          \r\n                    ))}\r\n                </ol>\r\n                </figure>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Recipe;","import React , {useEffect,useState}from \"react\";\nimport Recipe from  './recipe';\nimport './App.css';\n\nfunction App() {\n\n  const APP_ID ='2fbfa884';\n  const APP_KEY=\"a73e98871637710016698ceb0b29f793\";\n\n  const [recipes , setRecipes] = useState([]);\n  const [search ,setSearch] = useState('');\n  const [query , setQuery] = useState('chicken')\n  \n//DATA STORING AND PROCESSING\n  useEffect(() =>{\n    get_recipes();\n\n  },[query]);\n\n  //FETCHING DATA\n\n  const get_recipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    setRecipes(data.hits);\n    \n  }\n\n  //SEARCHING FUNCTION\n\n  const updateSearch = e =>{\n    setSearch(e.target.value);\n    \n  }\n  const getSearch = e =>{\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1 className='title'>The Recipe App</h1>\n      <form className=\"search_form\">\n        <input type=\"text\" className=\"search_bar\" value={search} onChange={updateSearch}/>\n        <button type=\"submit\" className=\"search_btn \" onClick={ getSearch}>SEARCH</button>\n      </form>\n      <div className='recipes'>\n      {recipes.map(recipe =>(\n        <Recipe \n        key={recipe.recipe.label}\n        title={recipe.recipe.label} \n        calories={recipe.recipe.calories }\n        image={recipe.recipe.image}         \n        cuisineType={recipe.recipe.cuisineType}\n        ingredients={recipe.recipe.ingredients}/>\n      ))};\n      </div>\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}